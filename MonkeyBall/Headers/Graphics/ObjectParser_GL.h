/*==================================================================================+#																					##	File:		objectParser.h														##																					##	Headers for the graphical robot (OpenGL) class.  A VirtualRobot object is		##	created by the Robot object of a telerobotics session.  It is initialized		##	using the robot graphical model.												##																					##-----------------------------------------------------------------------------------##	Author:			jean-yves herve'												##					GRPR, Ecole Polytechnique de Montreal							##																					##	Date Creation:	Spring 2000														##																					##																					#+==================================================================================*/#ifndef OBJECT_PARSER_GL_H#define OBJECT_PARSER_GL_H//#include "Box_GL.h"//#include "armKinematics.h"#include "Prism_GL.h"#include "Polyhedron_GL.h"#include "Cylinder_GL.h"#include "Cone_GL.h"#include "TubularSection_GL.h"#include "HalfCylinder_GL.h"#include "HalfCone_GL.h"//----------------------------------------------------------------------------------//-----------------------------------Class definition-------------------------------//class ObjectParser_GL{	public:		//		//	Constructor and destructor			//		ObjectParser_GL(char theFolderPath[]);		virtual ~ObjectParser_GL(void);		//		//	Public methods		//		GraphicObject_GL ***getModel(FILE *fp, short *nbSeg, short **nbObj, short **jRef,										short nbJ);		GraphicObject_GL **getNextSegment(FILE *fp, short *nbObjSeg, short *jRefSeg,										short nbJ);		GraphicObject_GL *getNextObject(FILE *fObj);	private:		//		//	private members		//		GraphicObject_GL ***segObject;		//		char			inputLine[256],						localFile[256],						myString[256],						folderPath[256];		//		//		//	private methods.		//		void readOneVect(FILE *fp, GLfloat *v);		GraphicObject_GL *readOneBox(FILE *fSeg, short iBoxType);		GraphicObject_GL *readOnePrism(FILE *fSeg, short iPrismType);		GraphicObject_GL *readOneCylinder(FILE *fSeg, short iCylType);		GraphicObject_GL *readOneTubSection(FILE *fSeg);		GraphicObject_GL *readOneHalfCyl(FILE *fSeg, short iHalfCylType);		GraphicObject_GL *readOneCone(FILE *fSeg, short iConeType);		GraphicObject_GL *readOneHalfCone(FILE *fSeg, short iHalfConeType);		GraphicObject_GL *readOnePolyhedron(FILE *fSeg);};#endif